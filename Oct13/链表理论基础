链表理论基础

什么是链表?
    链表是一种通过指针串联在一起的线性结构，每个节点由两部分组成。一个是数据域，一个是指针域，最后一个节点的指针域指向null  

链表的类型
    - 单链表
    - 双链表
        双链表每个节点有两个指针域，一个指向下一个节点，一个指向上一个节点
        双链表既可以向前查询也可以向后查询
    - 循环链表
        链表首尾相连

链表的存储方式
    链表在内存中可以不是连续分布的，而是散乱分布在内存的某地址中
    链表是通过指针域的指针链接在内存中的各个节点

链表操作
    - 删除节点
    - 添加节点

性能分析
            插入/删除（时间复杂度）     查询（时间复杂度）      适用场景
    - 数组      o(n)                    o(1)              数据量固定，频繁查询，较少增删
    - 链表      o(1)                    o(n)              数据量不固定，频繁增删，较少查询
    数组的长度是固定的，链表的长度不固定

链表定义
    class ListNode:
        def __init__(self, val, next = None):
            self.val = val
            self.next = next
