# 二叉树理论基础

二叉树的种类
    - 满二叉树：如果一颗二叉树只有度为0的结点和度为2的结点，并且度为0的结点都在同一层上，则这颗二叉树为满二叉树
        深度k, 结点2^(k-1)
    - 完全二叉树：在完全二叉树中，除了底层结点可能没有填满之外，其余每层结点数都达到最大，并且最下面一层的结点都集中在该层最左边的
        的若干位置。堆就是一个完全二叉树
    - 二叉搜索树：二叉搜索树是一个有序树。
        当它的左子树不空，左子树所有结点都小于根结点的值
        当它的右子树不空，右子树所有结点都大于根结点的值
    - 平衡二叉树搜索树：AVL树
        它是一颗空树或它的左右两个子树的高度差绝对值不超过1，左右两个子树都是平衡二叉树

二叉树的存储方式
    二叉树可以链式存储，也可以顺序存储
    - 链式存储：通过指针把分布在各个地址的节点串联在一起
    - 顺序存储：如果父节点的数组下标是i, 那么左孩子是2i+1, 右孩子是2i+2

二叉树的遍历方式
    - 深度优先遍历：先往深走，遇到叶子节点再往回走
        1. 前序遍历
        2. 中序遍历
        3. 后序遍历
    - 广度优先遍历：一层一层遍历
        1. 层次遍历

二叉树的定义

class TreeNode:
    def __init__(self, val, left = None, right = None):
        self.val = val
        self.left = left
        self.right = right